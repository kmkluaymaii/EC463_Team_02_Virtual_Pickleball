#include <Arduino.h>
#include <SPIFFS.h>
#include <AudioFileSourceSPIFFS.h>
#include <AudioGeneratorWAV.h>
#include <AudioOutputI2S.h>
//
//#define I2S_BCLK 7   // BCLK to MAX98357
//#define I2S_LRC  8   // LRC to MAX98357
//#define I2S_DOUT 6   // DIN to MAX98357
//#define BUTTON   9    // Button to GND
//
//AudioGeneratorWAV *wav;
//AudioFileSourceSPIFFS *file;
//AudioOutputI2S *out;
//
//void setup() {
//  Serial.begin(115200);
//  pinMode(BUTTON, INPUT_PULLUP);
//  SPIFFS.begin(true);
//
//  out = new AudioOutputI2S();
//  out->SetPinout(I2S_BCLK, I2S_LRC, I2S_DOUT);
//  out->SetGain(0.6); // adjust loudness
//
//  wav = new AudioGeneratorWAV();
//  Serial.println("Ready — press the button to play sound");
//}
//
//void loop() {
//  static bool playing = false;
//
//  if (!playing && digitalRead(BUTTON) == LOW) {
//    Serial.println("Button pressed — playing sound");
//    file = new AudioFileSourceSPIFFS("/sound.wav");  // must upload first
//    wav->begin(file, out);
//    playing = true;
//    delay(200); // debounce
//  }
//
//  if (playing) {
//    if (!wav->isRunning()) {
//      wav->stop();
//      delete file;
//      playing = false;
//      Serial.println("Playback done");
//    } else {
//      wav->loop();
//    }
//  }
//}


//new
//#include <Arduino.h>
//#include <AudioGeneratorSine.h>
//#include <AudioOutputI2S.h>
//
//#define I2S_BCLK 7
//#define I2S_LRC  8
//#define I2S_DOUT 6
//#define BUTTON   9
//
//AudioOutputI2S out;
//AudioGeneratorSine sine;
//bool playing = false;
//
//void setup() {
//  pinMode(BUTTON, INPUT_PULLUP);
//  out.SetPinout(I2S_BCLK, I2S_LRC, I2S_DOUT);
//  out.SetGain(0.7);
//}
//
//void loop() {
//  if (!playing && digitalRead(BUTTON) == LOW) {
//    delay(30);
//    if (digitalRead(BUTTON) == LOW) {
//      sine.SetFrequency(880);
//      sine.begin(&out);
//      playing = true;
//    }
//  }
//  if (playing) {
//    if (!sine.loop()) { sine.stop(); playing = false; }
//    // Stop after ~1 sec
//    static uint32_t t0 = millis();
//    if (millis() - t0 > 1000) { sine.stop(); playing = false; t0 = millis(); }
//  }
//}

//new

#include <Arduino.h>
#include "driver/i2s.h"

#define I2S_BCLK 7
#define I2S_LRC  8
#define I2S_DOUT 6

// 22.05 kHz, 16-bit mono
const int SAMPLE_RATE = 22050;
const int AMPL = 20000; // 0..32767
const float FREQ = 880.0;

void setup() {
  i2s_config_t cfg = {
    .mode = (i2s_mode_t)(I2S_MODE_MASTER | I2S_MODE_TX),
    .sample_rate = SAMPLE_RATE,
    .bits_per_sample = I2S_BITS_PER_SAMPLE_16BIT,
    .channel_format = I2S_CHANNEL_FMT_ONLY_LEFT, // mono
    .communication_format = I2S_COMM_FORMAT_STAND_MSB,
    .intr_alloc_flags = 0,
    .dma_buf_count = 6,
    .dma_buf_len = 256,
    .use_apll = false,
    .tx_desc_auto_clear = true,
    .fixed_mclk = 0
  };
  i2s_pin_config_t pins = {
    .bck_io_num = I2S_BCLK,
    .ws_io_num  = I2S_LRC,
    .data_out_num = I2S_DOUT,
    .data_in_num = I2S_PIN_NO_CHANGE
  };
  i2s_driver_install(I2S_NUM_0, &cfg, 0, nullptr);
  i2s_set_pin(I2S_NUM_0, &pins);
  i2s_zero_dma_buffer(I2S_NUM_0);
}

void loop() {
  static uint32_t n = 0;
  int16_t buf[256];
  for (int i = 0; i < 256; ++i) {
    float t = (float)(n++) / SAMPLE_RATE;
    buf[i] = (int16_t)(sin(2 * PI * FREQ * t) * AMPL);
  }
  size_t written;
  i2s_write(I2S_NUM_0, buf, sizeof(buf), &written, portMAX_DELAY);
}
